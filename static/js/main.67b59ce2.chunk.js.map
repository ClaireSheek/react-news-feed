{"version":3,"sources":["components/DateFilter.js","components/Feed.js","components/SearchBar.js","App.js","reportWebVitals.js","index.js"],"names":["DateFilter","props","stories","selectOptionsDate","handleDateChange","handleFilteredData","event","a","targetValue","target","value","secondsSinceEpoch","Math","round","Date","now","twentyFourHoursFunc","pastWeekFunc","pastMonthFunc","pastYearFunc","allTime","onSubmit","e","preventDefault","ref","onChange","Feed","option","inputValue","className","map","story","points","author","created_at","substring","title","dangerouslySetInnerHTML","__html","comment_text","created_at_i","console","log","href","url","num_comments","SearchBar","searchInput","selectOptions","handleChange","class","type","App","useState","setStories","setOption","setInputValue","setURL","React","createRef","useEffect","fetch","then","res","json","hits","current","dateParams","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.67b59ce2.chunk.js","sourcesContent":["import React from \"react\";\n \nexport default function DateFilter(props) {\n  const { stories,\n          selectOptionsDate,\n          handleDateChange,\n        } = props\n \n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  const handleFilteredData = async (event) => {\n    let targetValue = event.target.value\n\n    const secondsSinceEpoch = Math.round(Date.now() / 1000)\n\n    const twentyFourHoursFunc = () => {\n      handleDateChange(secondsSinceEpoch - 86400);\n      }\n                \n    const pastWeekFunc = () => {\n      handleDateChange(secondsSinceEpoch - 604800);\n    }\n    \n    const pastMonthFunc = () => {\n      handleDateChange(secondsSinceEpoch - 2628288);\n    }\n\n    const pastYearFunc = () => {\n      handleDateChange(secondsSinceEpoch - 31536000);\n    }\n\n    const allTime = () => {\n      handleDateChange(secondsSinceEpoch - 1160355600);\n    }\n    \n    if(targetValue === 'last24') {\n      return twentyFourHoursFunc() \n    } \n    else if (targetValue === 'pastWeek') {\n      return pastWeekFunc() \n    } \n    else if (targetValue === \"pastMonth\") {\n      return pastMonthFunc()\n    }\n    else if (targetValue === \"pastYear\") {\n      return pastYearFunc()\n    } \n    else if (targetValue === \"all\") {\n      return allTime()\n    }\n  }\n \n  return (\n    <div>\n      <form onSubmit={handleSubmit}>\n        <label>Filter for </label>\n        <select ref={selectOptionsDate} onChange={handleFilteredData}>\n          <option value=\"all\">All time</option>\n          <option value=\"last24\">Last 24h</option>\n          <option value=\"pastWeek\">Past Week</option>\n          <option value=\"pastMonth\">Past Month</option>\n          <option value=\"pastYear\">Past Year</option>\n        </select>\n      </form>\n    </div>\n  );\n}","import React from \"react\";\nimport \"../styles/feed.css\";\n\n\n// http://hn.algolia.com/api/v1/search?tags=front_page\n\nconst Feed = (props) => {\n  const { stories, option, inputValue} = props;\n\n  if(option === 'comment'){\n    return (\n      <ol className=\"feed\">\n        {stories.map((story) => {\n          return (\n            <li className=\"story\" key={story.created_at_i}>\n              <p className=\"storyDetails\">\n                {story.points} | {story.author} |{\" \"}\n                {story.created_at.substring(5, 10)}-\n                {story.created_at.substring(0, 4)} | from {story.title}\n              </p>\n              <p dangerouslySetInnerHTML={{ __html: story.comment_text }}/>\n            </li>\n          );\n        })}\n      </ol>\n    );\n  } else {\n    console.log(inputValue)\n    return (\n      <ol className=\"feed\">\n        {stories.map((story) => {\n          return (\n            <li className=\"story\" key={story.created_at_i}>\n              <a href={story.url}>{story.title}</a> \n              <a className=\"url\" href={story.url}>({story.url})</a>\n              <p className=\"storyDetails\">\n                {story.points} | {story.author} |{\" \"}\n                {story.created_at.substring(5, 10)}-\n                {story.created_at.substring(0, 4)} | {story.num_comments} comments\n              </p>\n            </li>\n          );\n        })}\n      </ol>\n    );\n  }\n};\n\nexport default Feed;\n","import React from \"react\";\nimport \"../styles/searchBar.css\";\n\nexport default function SearchBar(props) {\n  const {\n    option,\n    searchInput,\n    selectOptions,\n    inputValue,\n    handleChange,\n  } = props;\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n  };\n\n  return (\n    <div class=\"search-bar\">\n      {/* <img src={logo} className=\"App-logo\" alt=\"logo\" /> */}\n      <form onSubmit={handleSubmit}>\n        <label>Search</label>\n        <input\n          ref={searchInput}\n          type=\"text\"\n          value={inputValue}\n          onChange={handleChange}\n        ></input>\n        <select ref={selectOptions} value={option} onChange={handleChange}>\n          <option value=\"story\">Stories</option>\n          <option value=\"comment\">Comments</option>\n          <option value=\"author_\">Author</option>\n        </select>\n      </form>\n    </div>\n  );\n}\n","import React, { useState, useEffect } from \"react\";\nimport \"./App.css\";\nimport DateFilter from \"./components/DateFilter\";\nimport Feed from \"./components/Feed\";\nimport SearchBar from \"./components/SearchBar\";\n\nfunction App() {\n  const [stories, setStories] = useState([]);\n  const [option, setOption] = useState([]);\n  const [inputValue, setInputValue] = useState(\"\");\n  const [date, setDate] = useState(0)\n  // const [filterData, SetFilteredData] = useState([]);\n  const [url, setURL] = useState(\n    \"http://hn.algolia.com/api/v1/search?tags=story\"\n  );\n\n  let searchInput = React.createRef();\n  let selectOptions = React.createRef();\n  let selectOptionsDate = React.createRef();\n\n  const handleChange = () => {\n    setInputValue(searchInput.current.value);\n    setOption(selectOptions.current.value);\n\n    if (option !== \"author_\") {\n      setURL(\n        `http://hn.algolia.com/api/v1/search?query=${searchInput.current.value}&tags=${selectOptions.current.value}`\n      );\n    } else {\n      setURL(\n        `http://hn.algolia.com/api/v1/search?tags=author_${searchInput.current.value}`\n      );\n    }\n  };\n\n  const handleDateChange = (dateParams) => {\n    setURL(\n      `http://hn.algolia.com/api/v1/search?query=${searchInput.current.value}&tags=${selectOptions.current.value}&numericFilters=created_at_i>${dateParams}`\n    );\n  }\n\n  useEffect(() => {\n    fetch(url)\n      .then((res) => res.json())\n      .then((stories) => setStories(stories.hits));\n  }, [url]);\n\n  return (\n    <div className=\"App\">\n\n      <SearchBar\n        option={option}\n        searchInput={searchInput}\n        selectOptions={selectOptions}\n        inputValue={inputValue}\n        handleChange={handleChange}\n      />\n      <DateFilter \n      stories={stories}\n      selectOptionsDate={selectOptionsDate}\n      handleDateChange={handleDateChange}\n      />\n      <Feed stories={stories} option={option} />\n\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}